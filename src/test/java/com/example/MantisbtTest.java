package com.example;

import static org.hamcrest.CoreMatchers.*;
import static org.junit.Assert.*;

import java.util.HashMap;
import java.util.Map;

import org.junit.After;
import org.junit.Before;
import org.junit.BeforeClass;
// Generated by Selenium IDE
import org.junit.Test;
import org.openqa.selenium.By;
import org.openqa.selenium.Dimension;
import org.openqa.selenium.JavascriptExecutor;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.firefox.FirefoxDriver;

import com.POs.mantisbt.MantisbtLoginPO;
import com.POs.mantisbt.MantisbtProjectPO;
import com.POs.mantisbt.MantisbtReportIssue;
import com.POs.mantisbt.MantisbtUserPO;

public class MantisbtTest {

    @BeforeClass()
    public static void setup() {
        System.setProperty("webdriver.gecko.driver", "/Users/nomundarierdenebileg/Downloads/geckodriver");
    }

    private WebDriver driver;

    private Map<String, Object> vars;

    private JavascriptExecutor js;

    @Before
    public void setUp() {
        driver = new FirefoxDriver();
        js = (JavascriptExecutor) driver;
        vars = new HashMap<String, Object>();
    }

    @After
    public void tearDown() {
        driver.quit();
    }

    public void setting(){
        driver.get("http://localhost:3000/mantisbt/login_page.php");
        driver.manage().window().setSize(new Dimension(1470, 866));
    }

    @Test
    public void login() {
        setting();
        MantisbtLoginPO _MantisbtLoginPO = new MantisbtLoginPO(driver, js, vars);
        _MantisbtLoginPO.login("administrator", "root");
        assertThat(_MantisbtLoginPO.set_CSSSELECTOR_login_info_left_1(), is("Logged in as: administrator (administrator)"));
        _MantisbtLoginPO.click_LINKTEXT_Logout();
    }

    @Test
    public void addnewUser() {
        setting();
        MantisbtUserPO _MantisbtUserPO = new MantisbtUserPO(driver, js, vars);
        _MantisbtUserPO.addUser("administrator", "root", "username008", "username008", "username8@username.it", "updater");
    }

    @Test
    public void addExistingUserFail() {
        setting();
        MantisbtUserPO _MantisbtUserPO = new MantisbtUserPO(driver, js, vars);
        _MantisbtUserPO.addExistingUserFail("administrator", "root", "username001", "username001", "username1@username.it", "updater");
        assertThat(_MantisbtUserPO.set_CSSSELECTOR_trnth_child2center_1(), is("That username is already being used. Please go back and select another one."));
        _MantisbtUserPO.click_LINKTEXT_Logout();
    }

    @Test
    public void addEmptyUser() {
        setting();
        MantisbtUserPO _MantisbtUserPO = new MantisbtUserPO(driver, js, vars);
        _MantisbtUserPO.addEmptyUser("administrator", "root");
        assertThat(_MantisbtUserPO.set_CSSSELECTOR_trnth_child2center_1(), is("A necessary field \"\" was empty. Please recheck your inputs."));
        _MantisbtUserPO.click_LINKTEXT_Logout();
    }

    @Test
    public void addProject() {
        setting();
        MantisbtProjectPO _MantisbtProjectPO = new MantisbtProjectPO(driver, js, vars);
        _MantisbtProjectPO.addProject("administrator", "root", "Project005", "release", "Description");
        assertThat(_MantisbtProjectPO.set_CSSSELECTOR_row_1tdnth_child5_1(), is("Description"));
        _MantisbtProjectPO.click_LINKTEXT_Logout();
    }

    @Test
    public void addExistingProject() {
        setting();
        MantisbtProjectPO _MantisbtProjectPO = new MantisbtProjectPO(driver, js, vars);
        _MantisbtProjectPO.addExistingProject("administrator", "root", "Project001", "release", "Description");
        assertThat(_MantisbtProjectPO.set_CSSSELECTOR_trnth_child2center_1(), is("A project with that name already exists. Please go back and enter a different name."));
        _MantisbtProjectPO.click_LINKTEXT_Logout();
    }

    @Test
    public void addCategory() {
        setting();
        driver.findElement(By.name("username")).click();
        MantisbtProjectPO _MantisbtProjectPO = new MantisbtProjectPO(driver, js, vars);
        _MantisbtProjectPO.addCategory("administrator", "root", "Category008");
        assertTrue(_MantisbtProjectPO.set_CSSSELECTOR_row_1nth_child5tdnth_child1_1("Category008"));
        _MantisbtProjectPO.click_LINKTEXT_Logout();
    }


    @Test
    public void addExistingCategory() {
        setting();
        MantisbtProjectPO _MantisbtProjectPO = new MantisbtProjectPO(driver, js, vars);
        _MantisbtProjectPO.addExistingCategory("administrator", "root", "Category001");
        assertThat(_MantisbtProjectPO.set_CSSSELECTOR_trnth_child2center_1(), is("A category with that name already exists."));
        _MantisbtProjectPO.click_LINKTEXT_Logout();
    }

    @Test
    public void addNewIssue() {
        setting();
        MantisbtReportIssue _MantisbtReportIssue = new MantisbtReportIssue(driver, js, vars);
        _MantisbtReportIssue.addNewIssue("administrator", "root", "Category001", "random", "crash", "immediate", "Summary001", "Description001");
        assertThat(_MantisbtReportIssue.set_CSSSELECTOR_leftnth_child10_1(), is("Summary001"));
        _MantisbtReportIssue.click_LINKTEXT_Logout();
    }

    @Test
    public void assignIssue() {
        setting();
        MantisbtReportIssue _MantisbtReportIssue = new MantisbtReportIssue(driver, js, vars);
        _MantisbtReportIssue.assignIssue("administrator", "root", "Assign");
        assertThat(_MantisbtReportIssue.set_CSSSELECTOR_trnth_child4issue_status_1(), is("assigned"));
        _MantisbtReportIssue.click_LINKTEXT_Logout();
    }

    @Test
    public void updateIssue() {
        setting();
        MantisbtReportIssue _MantisbtReportIssue = new MantisbtReportIssue(driver, js, vars);
        _MantisbtReportIssue.updateIssue("administrator", "root", "low");
        assertThat(_MantisbtReportIssue.set_CSSSELECTOR_row_2nth_child7tdnth_child2_1(), is("low"));
        _MantisbtReportIssue.click_LINKTEXT_Logout();
    }
}
